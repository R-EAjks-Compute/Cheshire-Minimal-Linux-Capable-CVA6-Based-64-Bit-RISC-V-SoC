// Generated by PeakRDL-cheader - A free and open-source header generator
//  https://github.com/SystemRDL/PeakRDL-cheader

#ifndef CHESHIRE_RDL_H
#define CHESHIRE_RDL_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>
#include <assert.h>

// Mem - cheshire::Boot_ROM
typedef struct __attribute__ ((__packed__)) {
    uint64_t mem[32768];
} cheshire__Boot_ROM_t;

// Reg - cheshire_regs::scratch
#define CHESHIRE_REGS__SCRATCH__SCRATCH_bm 0xffffffff
#define CHESHIRE_REGS__SCRATCH__SCRATCH_bp 0
#define CHESHIRE_REGS__SCRATCH__SCRATCH_bw 32
#define CHESHIRE_REGS__SCRATCH__SCRATCH_reset 0x0
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t scratch :32;
    } f;
    uint32_t w;
} cheshire_regs__scratch_t;

// Reg - cheshire_regs::boot_mode
#define CHESHIRE_REGS__BOOT_MODE__BOOT_MODE_bm 0x3
#define CHESHIRE_REGS__BOOT_MODE__BOOT_MODE_bp 0
#define CHESHIRE_REGS__BOOT_MODE__BOOT_MODE_bw 2
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :30;
        uint32_t boot_mode :2;
    } f;
    uint32_t w;
} cheshire_regs__boot_mode_t;

// Reg - cheshire_regs::rtc_freq
#define CHESHIRE_REGS__RTC_FREQ__REF_FREQ_bm 0xffffffff
#define CHESHIRE_REGS__RTC_FREQ__REF_FREQ_bp 0
#define CHESHIRE_REGS__RTC_FREQ__REF_FREQ_bw 32
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t ref_freq :32;
    } f;
    uint32_t w;
} cheshire_regs__rtc_freq_t;

// Reg - cheshire_regs::platform_rom
#define CHESHIRE_REGS__PLATFORM_ROM__PLATFORM_ROM_bm 0xffffffff
#define CHESHIRE_REGS__PLATFORM_ROM__PLATFORM_ROM_bp 0
#define CHESHIRE_REGS__PLATFORM_ROM__PLATFORM_ROM_bw 32
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t platform_rom :32;
    } f;
    uint32_t w;
} cheshire_regs__platform_rom_t;

// Reg - cheshire_regs::num_int_harts
#define CHESHIRE_REGS__NUM_INT_HARTS__NUM_HARTS_bm 0xffffffff
#define CHESHIRE_REGS__NUM_INT_HARTS__NUM_HARTS_bp 0
#define CHESHIRE_REGS__NUM_INT_HARTS__NUM_HARTS_bw 32
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t num_harts :32;
    } f;
    uint32_t w;
} cheshire_regs__num_int_harts_t;

// Reg - cheshire_regs::hw_features
#define CHESHIRE_REGS__HW_FEATURES__BOOTROM_bm 0x1
#define CHESHIRE_REGS__HW_FEATURES__BOOTROM_bp 0
#define CHESHIRE_REGS__HW_FEATURES__BOOTROM_bw 1
#define CHESHIRE_REGS__HW_FEATURES__LLC_bm 0x2
#define CHESHIRE_REGS__HW_FEATURES__LLC_bp 1
#define CHESHIRE_REGS__HW_FEATURES__LLC_bw 1
#define CHESHIRE_REGS__HW_FEATURES__UART_bm 0x4
#define CHESHIRE_REGS__HW_FEATURES__UART_bp 2
#define CHESHIRE_REGS__HW_FEATURES__UART_bw 1
#define CHESHIRE_REGS__HW_FEATURES__SPI_HOST_bm 0x8
#define CHESHIRE_REGS__HW_FEATURES__SPI_HOST_bp 3
#define CHESHIRE_REGS__HW_FEATURES__SPI_HOST_bw 1
#define CHESHIRE_REGS__HW_FEATURES__I2C_bm 0x10
#define CHESHIRE_REGS__HW_FEATURES__I2C_bp 4
#define CHESHIRE_REGS__HW_FEATURES__I2C_bw 1
#define CHESHIRE_REGS__HW_FEATURES__GPIO_bm 0x20
#define CHESHIRE_REGS__HW_FEATURES__GPIO_bp 5
#define CHESHIRE_REGS__HW_FEATURES__GPIO_bw 1
#define CHESHIRE_REGS__HW_FEATURES__DMA_bm 0x40
#define CHESHIRE_REGS__HW_FEATURES__DMA_bp 6
#define CHESHIRE_REGS__HW_FEATURES__DMA_bw 1
#define CHESHIRE_REGS__HW_FEATURES__SERIAL_LINK_bm 0x80
#define CHESHIRE_REGS__HW_FEATURES__SERIAL_LINK_bp 7
#define CHESHIRE_REGS__HW_FEATURES__SERIAL_LINK_bw 1
#define CHESHIRE_REGS__HW_FEATURES__VGA_bm 0x100
#define CHESHIRE_REGS__HW_FEATURES__VGA_bp 8
#define CHESHIRE_REGS__HW_FEATURES__VGA_bw 1
#define CHESHIRE_REGS__HW_FEATURES__USB_bm 0x200
#define CHESHIRE_REGS__HW_FEATURES__USB_bp 9
#define CHESHIRE_REGS__HW_FEATURES__USB_bw 1
#define CHESHIRE_REGS__HW_FEATURES__AXIRT_bm 0x400
#define CHESHIRE_REGS__HW_FEATURES__AXIRT_bp 10
#define CHESHIRE_REGS__HW_FEATURES__AXIRT_bw 1
#define CHESHIRE_REGS__HW_FEATURES__CLIC_bm 0x800
#define CHESHIRE_REGS__HW_FEATURES__CLIC_bp 11
#define CHESHIRE_REGS__HW_FEATURES__CLIC_bw 1
#define CHESHIRE_REGS__HW_FEATURES__IRQ_ROUTER_bm 0x1000
#define CHESHIRE_REGS__HW_FEATURES__IRQ_ROUTER_bp 12
#define CHESHIRE_REGS__HW_FEATURES__IRQ_ROUTER_bw 1
#define CHESHIRE_REGS__HW_FEATURES__BUS_ERR_bm 0x2000
#define CHESHIRE_REGS__HW_FEATURES__BUS_ERR_bp 13
#define CHESHIRE_REGS__HW_FEATURES__BUS_ERR_bw 1
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :18;
        uint32_t bus_err :1;
        uint32_t irq_router :1;
        uint32_t clic :1;
        uint32_t axirt :1;
        uint32_t usb :1;
        uint32_t vga :1;
        uint32_t serial_link :1;
        uint32_t dma :1;
        uint32_t gpio :1;
        uint32_t i2c :1;
        uint32_t spi_host :1;
        uint32_t uart :1;
        uint32_t llc :1;
        uint32_t bootrom :1;
    } f;
    uint32_t w;
} cheshire_regs__hw_features_t;

// Reg - cheshire_regs::llc_size
#define CHESHIRE_REGS__LLC_SIZE__LLC_SIZE_bm 0xffffffff
#define CHESHIRE_REGS__LLC_SIZE__LLC_SIZE_bp 0
#define CHESHIRE_REGS__LLC_SIZE__LLC_SIZE_bw 32
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t llc_size :32;
    } f;
    uint32_t w;
} cheshire_regs__llc_size_t;

// Reg - cheshire_regs::vga_params
#define CHESHIRE_REGS__VGA_PARAMS__RED_WIDTH_bm 0xff
#define CHESHIRE_REGS__VGA_PARAMS__RED_WIDTH_bp 0
#define CHESHIRE_REGS__VGA_PARAMS__RED_WIDTH_bw 8
#define CHESHIRE_REGS__VGA_PARAMS__GREEN_WIDTH_bm 0xff00
#define CHESHIRE_REGS__VGA_PARAMS__GREEN_WIDTH_bp 8
#define CHESHIRE_REGS__VGA_PARAMS__GREEN_WIDTH_bw 8
#define CHESHIRE_REGS__VGA_PARAMS__BLUE_WIDTH_bm 0xff0000
#define CHESHIRE_REGS__VGA_PARAMS__BLUE_WIDTH_bp 16
#define CHESHIRE_REGS__VGA_PARAMS__BLUE_WIDTH_bw 8
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :8;
        uint32_t blue_width :8;
        uint32_t green_width :8;
        uint32_t red_width :8;
    } f;
    uint32_t w;
} cheshire_regs__vga_params_t;

// Addrmap - cheshire_regs
typedef struct __attribute__ ((__packed__)) {
    cheshire_regs__scratch_t scratch[16];
    cheshire_regs__boot_mode_t boot_mode;
    cheshire_regs__rtc_freq_t rtc_freq;
    cheshire_regs__platform_rom_t platform_rom;
    cheshire_regs__num_int_harts_t num_int_harts;
    cheshire_regs__hw_features_t hw_features;
    cheshire_regs__llc_size_t llc_size;
    cheshire_regs__vga_params_t vga_params;
} cheshire_regs_t;

// Reg - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8::CTRL
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CTRL__CLK_ENA_bm 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CTRL__CLK_ENA_bp 0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CTRL__CLK_ENA_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CTRL__CLK_ENA_reset 0x0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CTRL__RESET_N_bm 0x2
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CTRL__RESET_N_bp 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CTRL__RESET_N_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CTRL__RESET_N_reset 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CTRL__AXI_IN_ISOLATE_bm 0x100
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CTRL__AXI_IN_ISOLATE_bp 8
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CTRL__AXI_IN_ISOLATE_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CTRL__AXI_IN_ISOLATE_reset 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CTRL__AXI_OUT_ISOLATE_bm 0x200
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CTRL__AXI_OUT_ISOLATE_bp 9
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CTRL__AXI_OUT_ISOLATE_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CTRL__AXI_OUT_ISOLATE_reset 0x1
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :22;
        uint32_t axi_out_isolate :1;
        uint32_t axi_in_isolate :1;
        uint32_t :6;
        uint32_t reset_n :1;
        uint32_t clk_ena :1;
    } f;
    uint32_t w;
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__CTRL_t;

// Reg - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8::ISOLATED
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__ISOLATED__AXI_IN_bm 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__ISOLATED__AXI_IN_bp 0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__ISOLATED__AXI_IN_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__ISOLATED__AXI_IN_reset 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__ISOLATED__AXI_OUT_bm 0x2
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__ISOLATED__AXI_OUT_bp 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__ISOLATED__AXI_OUT_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__ISOLATED__AXI_OUT_reset 0x1
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :30;
        uint32_t axi_out :1;
        uint32_t axi_in :1;
    } f;
    uint32_t w;
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__ISOLATED_t;

// Reg - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8::TX_PHY_CLK_DIV
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__TX_PHY_CLK_DIV__CLK_DIVS_bm 0x7ff
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__TX_PHY_CLK_DIV__CLK_DIVS_bp 0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__TX_PHY_CLK_DIV__CLK_DIVS_bw 11
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__TX_PHY_CLK_DIV__CLK_DIVS_reset 0x8
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :21;
        uint32_t clk_divs :11;
    } f;
    uint32_t w;
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__TX_PHY_CLK_DIV_t;

// Reg - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8::TX_PHY_CLK_START
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__TX_PHY_CLK_START__CLK_DIVS_bm 0x7ff
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__TX_PHY_CLK_START__CLK_DIVS_bp 0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__TX_PHY_CLK_START__CLK_DIVS_bw 11
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__TX_PHY_CLK_START__CLK_DIVS_reset 0x2
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :21;
        uint32_t clk_divs :11;
    } f;
    uint32_t w;
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__TX_PHY_CLK_START_t;

// Reg - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8::TX_PHY_CLK_END
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__TX_PHY_CLK_END__CLK_SHIFT_END_bm 0x7ff
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__TX_PHY_CLK_END__CLK_SHIFT_END_bp 0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__TX_PHY_CLK_END__CLK_SHIFT_END_bw 11
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__TX_PHY_CLK_END__CLK_SHIFT_END_reset 0x6
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :21;
        uint32_t clk_shift_end :11;
    } f;
    uint32_t w;
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__TX_PHY_CLK_END_t;

// Reg - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8::RAW_MODE_EN
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_EN__RAW_MODE_EN_bm 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_EN__RAW_MODE_EN_bp 0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_EN__RAW_MODE_EN_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_EN__RAW_MODE_EN_reset 0x0
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :31;
        uint32_t raw_mode_en :1;
    } f;
    uint32_t w;
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__RAW_MODE_EN_t;

// Reg - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8::RAW_MODE_IN_CH_SEL
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_IN_CH_SEL__RAW_MODE_IN_CH_SEL_bm 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_IN_CH_SEL__RAW_MODE_IN_CH_SEL_bp 0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_IN_CH_SEL__RAW_MODE_IN_CH_SEL_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_IN_CH_SEL__RAW_MODE_IN_CH_SEL_reset 0x0
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :31;
        uint32_t raw_mode_in_ch_sel :1;
    } f;
    uint32_t w;
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__RAW_MODE_IN_CH_SEL_t;

// Reg - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8::RAW_MODE_IN_DATA_VALID
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_IN_DATA_VALID__RAW_MODE_IN_DATA_VALID_bm 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_IN_DATA_VALID__RAW_MODE_IN_DATA_VALID_bp 0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_IN_DATA_VALID__RAW_MODE_IN_DATA_VALID_bw 1
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :31;
        uint32_t raw_mode_in_data_valid :1;
    } f;
    uint32_t w;
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__RAW_MODE_IN_DATA_VALID_t;

// Reg - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8::RAW_MODE_IN_DATA
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_IN_DATA__RAW_MODE_IN_DATA_bm 0xff
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_IN_DATA__RAW_MODE_IN_DATA_bp 0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_IN_DATA__RAW_MODE_IN_DATA_bw 8
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :24;
        uint32_t raw_mode_in_data :8;
    } f;
    uint32_t w;
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__RAW_MODE_IN_DATA_t;

// Reg - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8::RAW_MODE_OUT_CH_MASK
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_CH_MASK__RAW_MODE_OUT_CH_MASK_bm 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_CH_MASK__RAW_MODE_OUT_CH_MASK_bp 0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_CH_MASK__RAW_MODE_OUT_CH_MASK_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_CH_MASK__RAW_MODE_OUT_CH_MASK_reset 0x0
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :31;
        uint32_t raw_mode_out_ch_mask :1;
    } f;
    uint32_t w;
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__RAW_MODE_OUT_CH_MASK_t;

// Reg - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8::RAW_MODE_OUT_DATA_FIFO
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_DATA_FIFO__RAW_MODE_OUT_DATA_FIFO_bm 0xff
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_DATA_FIFO__RAW_MODE_OUT_DATA_FIFO_bp 0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_DATA_FIFO__RAW_MODE_OUT_DATA_FIFO_bw 8
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_DATA_FIFO__RAW_MODE_OUT_DATA_FIFO_reset 0x0
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :24;
        uint32_t raw_mode_out_data_fifo :8;
    } f;
    uint32_t w;
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__RAW_MODE_OUT_DATA_FIFO_t;

// Reg - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8::RAW_MODE_OUT_DATA_FIFO_CTRL
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_DATA_FIFO_CTRL__CLEAR_bm 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_DATA_FIFO_CTRL__CLEAR_bp 0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_DATA_FIFO_CTRL__CLEAR_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_DATA_FIFO_CTRL__FILL_STATE_bm 0x700
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_DATA_FIFO_CTRL__FILL_STATE_bp 8
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_DATA_FIFO_CTRL__FILL_STATE_bw 3
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_DATA_FIFO_CTRL__FILL_STATE_reset 0x0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_DATA_FIFO_CTRL__IS_FULL_bm 0x80000000
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_DATA_FIFO_CTRL__IS_FULL_bp 31
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_DATA_FIFO_CTRL__IS_FULL_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_DATA_FIFO_CTRL__IS_FULL_reset 0x0
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t is_full :1;
        uint32_t :20;
        uint32_t fill_state :3;
        uint32_t :7;
        uint32_t clear :1;
    } f;
    uint32_t w;
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__RAW_MODE_OUT_DATA_FIFO_CTRL_t;

// Reg - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8::RAW_MODE_OUT_EN
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_EN__RAW_MODE_OUT_EN_bm 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_EN__RAW_MODE_OUT_EN_bp 0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_EN__RAW_MODE_OUT_EN_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__RAW_MODE_OUT_EN__RAW_MODE_OUT_EN_reset 0x0
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :31;
        uint32_t raw_mode_out_en :1;
    } f;
    uint32_t w;
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__RAW_MODE_OUT_EN_t;

// Reg - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8::FLOW_CONTROL_FIFO_CLEAR
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__FLOW_CONTROL_FIFO_CLEAR__FLOW_CONTROL_FIFO_CLEAR_bm 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__FLOW_CONTROL_FIFO_CLEAR__FLOW_CONTROL_FIFO_CLEAR_bp 0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__FLOW_CONTROL_FIFO_CLEAR__FLOW_CONTROL_FIFO_CLEAR_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__FLOW_CONTROL_FIFO_CLEAR__FLOW_CONTROL_FIFO_CLEAR_reset 0x0
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :31;
        uint32_t flow_control_fifo_clear :1;
    } f;
    uint32_t w;
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__FLOW_CONTROL_FIFO_CLEAR_t;

// Reg - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8::CHANNEL_ALLOC_TX_CFG
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CFG__BYPASS_EN_bm 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CFG__BYPASS_EN_bp 0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CFG__BYPASS_EN_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CFG__BYPASS_EN_reset 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CFG__AUTO_FLUSH_EN_bm 0x2
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CFG__AUTO_FLUSH_EN_bp 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CFG__AUTO_FLUSH_EN_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CFG__AUTO_FLUSH_EN_reset 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CFG__AUTO_FLUSH_COUNT_bm 0xff00
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CFG__AUTO_FLUSH_COUNT_bp 8
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CFG__AUTO_FLUSH_COUNT_bw 8
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CFG__AUTO_FLUSH_COUNT_reset 0x2
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :16;
        uint32_t auto_flush_count :8;
        uint32_t :6;
        uint32_t auto_flush_en :1;
        uint32_t bypass_en :1;
    } f;
    uint32_t w;
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__CHANNEL_ALLOC_TX_CFG_t;

// Reg - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8::CHANNEL_ALLOC_TX_CH_EN
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CH_EN__CHANNEL_ALLOC_TX_CH_EN_bm 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CH_EN__CHANNEL_ALLOC_TX_CH_EN_bp 0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CH_EN__CHANNEL_ALLOC_TX_CH_EN_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CH_EN__CHANNEL_ALLOC_TX_CH_EN_reset 0x1
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :31;
        uint32_t channel_alloc_tx_ch_en :1;
    } f;
    uint32_t w;
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__CHANNEL_ALLOC_TX_CH_EN_t;

// Reg - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8::CHANNEL_ALLOC_TX_CTRL
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CTRL__CLEAR_bm 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CTRL__CLEAR_bp 0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CTRL__CLEAR_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CTRL__FLUSH_bm 0x2
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CTRL__FLUSH_bp 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_TX_CTRL__FLUSH_bw 1
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :30;
        uint32_t flush :1;
        uint32_t clear :1;
    } f;
    uint32_t w;
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__CHANNEL_ALLOC_TX_CTRL_t;

// Reg - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8::CHANNEL_ALLOC_RX_CFG
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CFG__BYPASS_EN_bm 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CFG__BYPASS_EN_bp 0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CFG__BYPASS_EN_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CFG__BYPASS_EN_reset 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CFG__AUTO_FLUSH_EN_bm 0x2
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CFG__AUTO_FLUSH_EN_bp 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CFG__AUTO_FLUSH_EN_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CFG__AUTO_FLUSH_EN_reset 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CFG__AUTO_FLUSH_COUNT_bm 0xff00
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CFG__AUTO_FLUSH_COUNT_bp 8
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CFG__AUTO_FLUSH_COUNT_bw 8
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CFG__AUTO_FLUSH_COUNT_reset 0x2
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CFG__SYNC_EN_bm 0x10000
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CFG__SYNC_EN_bp 16
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CFG__SYNC_EN_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CFG__SYNC_EN_reset 0x1
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :15;
        uint32_t sync_en :1;
        uint32_t auto_flush_count :8;
        uint32_t :6;
        uint32_t auto_flush_en :1;
        uint32_t bypass_en :1;
    } f;
    uint32_t w;
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__CHANNEL_ALLOC_RX_CFG_t;

// Reg - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8::CHANNEL_ALLOC_RX_CTRL
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CTRL__CLEAR_bm 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CTRL__CLEAR_bp 0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CTRL__CLEAR_bw 1
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :31;
        uint32_t clear :1;
    } f;
    uint32_t w;
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__CHANNEL_ALLOC_RX_CTRL_t;

// Reg - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8::CHANNEL_ALLOC_RX_CH_EN
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CH_EN__CHANNEL_ALLOC_RX_CH_EN_bm 0x1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CH_EN__CHANNEL_ALLOC_RX_CH_EN_bp 0
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CH_EN__CHANNEL_ALLOC_RX_CH_EN_bw 1
#define SERIAL_LINK_BASE_NUMCHANNELS_1_LOG2NUMCHANNELS_1_NUMBITS_8__CHANNEL_ALLOC_RX_CH_EN__CHANNEL_ALLOC_RX_CH_EN_reset 0x1
typedef union {
    struct __attribute__ ((__packed__)) {
        uint32_t :31;
        uint32_t channel_alloc_rx_ch_en :1;
    } f;
    uint32_t w;
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__CHANNEL_ALLOC_RX_CH_EN_t;

// Regfile - serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8
typedef struct __attribute__ ((__packed__)) {
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__CTRL_t CTRL;
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__ISOLATED_t ISOLATED;
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__TX_PHY_CLK_DIV_t TX_PHY_CLK_DIV[1];
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__TX_PHY_CLK_START_t TX_PHY_CLK_START[1];
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__TX_PHY_CLK_END_t TX_PHY_CLK_END[1];
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__RAW_MODE_EN_t RAW_MODE_EN;
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__RAW_MODE_IN_CH_SEL_t RAW_MODE_IN_CH_SEL;
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__RAW_MODE_IN_DATA_VALID_t RAW_MODE_IN_DATA_VALID[1];
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__RAW_MODE_IN_DATA_t RAW_MODE_IN_DATA;
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__RAW_MODE_OUT_CH_MASK_t RAW_MODE_OUT_CH_MASK[1];
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__RAW_MODE_OUT_DATA_FIFO_t RAW_MODE_OUT_DATA_FIFO;
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__RAW_MODE_OUT_DATA_FIFO_CTRL_t RAW_MODE_OUT_DATA_FIFO_CTRL;
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__RAW_MODE_OUT_EN_t RAW_MODE_OUT_EN;
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__FLOW_CONTROL_FIFO_CLEAR_t FLOW_CONTROL_FIFO_CLEAR;
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__CHANNEL_ALLOC_TX_CFG_t CHANNEL_ALLOC_TX_CFG;
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__CHANNEL_ALLOC_TX_CH_EN_t CHANNEL_ALLOC_TX_CH_EN[1];
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__CHANNEL_ALLOC_TX_CTRL_t CHANNEL_ALLOC_TX_CTRL;
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__CHANNEL_ALLOC_RX_CFG_t CHANNEL_ALLOC_RX_CFG;
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__CHANNEL_ALLOC_RX_CTRL_t CHANNEL_ALLOC_RX_CTRL;
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8__CHANNEL_ALLOC_RX_CH_EN_t CHANNEL_ALLOC_RX_CH_EN[1];
} serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8_t;

// Addrmap - serial_link_single_channel_reg_NumBits_8
typedef struct __attribute__ ((__packed__)) {
    serial_link_base_NumChannels_1_Log2NumChannels_1_NumBits_8_t serial_link;
} serial_link_single_channel_reg_NumBits_8_t;

// Mem - cheshire::LLC_SPM_cached
typedef struct __attribute__ ((__packed__)) {
    uint64_t mem[8388608];
} cheshire__LLC_SPM_cached_t;

// Mem - cheshire::LLC_SPM_uncached
typedef struct __attribute__ ((__packed__)) {
    uint64_t mem[8388608];
} cheshire__LLC_SPM_uncached_t;

// Addrmap - cheshire
typedef struct __attribute__ ((__packed__)) {
    uint8_t RESERVED_0_1ffffff[0x2000000];
    cheshire__Boot_ROM_t Boot_ROM;
    uint8_t RESERVED_2040000_2ffffff[0xfc0000];
    cheshire_regs_t cheshire_regs;
    uint8_t RESERVED_300005c_3005fff[0x5fa4];
    serial_link_single_channel_reg_NumBits_8_t serial_link;
    uint8_t RESERVED_3006050_fffffff[0xcff9fb0];
    cheshire__LLC_SPM_cached_t LLC_SPM_cached;
    cheshire__LLC_SPM_uncached_t LLC_SPM_uncached;
} cheshire_t;


static_assert(sizeof(cheshire_t) == 0x18000000, "Packing error");

#ifdef __cplusplus
}
#endif

#endif /* CHESHIRE_RDL_H */
